# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    machine:
      image: ubuntu-1604:202004-01

    #docker:
      # specify the version
      #- image: golang:1.14-buster

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    environment: # environment variables for the build itself
      TEST_RESULTS: /tmp/test-results # path to where test results will be saved
      PATH: $PATH:/usr/local/go/bin
      CGO_ENABLED: 0

    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
    working_directory: /go/src/github.com/ideal-co/ogre
    steps:
      - checkout
      - run: mkdir -p $TEST_RESULTS # create the test results directory
      - run: mkdir -p /etc/ogred/ogre.d && cp configs/ogre.d/ogred.conf.json /etc/ogred/ogre.d/
      - run: wget https://dl.google.com/go/go1.14.linux-amd64.tar.gz && tar -C /usr/local -xzf go1.14.linux-amd64.tar.gz
      - run: go get github.com/jstemmer/go-junit-report
      - run: go mod vendor
      - run:
          name: Ogre unit tests
          command: |
            trap "go-junit-report <${TEST_RESULTS}/go-test.out > ${TEST_RESULTS}/go-test-report.xml" EXIT
            make test | tee ${TEST_RESULTS}/go-test.out